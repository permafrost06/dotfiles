#!/bin/sh

case $BLOCK_BUTTON in
    2) if [ "$(ddcutil getvcp 14 | sed -r "s/.*0x0([5b]).*/\1/")" = "5" ] ; then
        ddcutil setvcp 14 11
    else
        ddcutil setvcp 14 5
    fi;;
    3) if [ "$(ddcutil getvcp 14 | sed -r "s/.*0x0([5b]).*/\1/")" = "5" ] ; then
        ddcutil setvcp 10 0 && ddcutil setvcp 14 11
    else
        ddcutil setvcp 10 100 && ddcutil setvcp 14 5
    fi ;;
	4) xbacklight -inc 10 & ddcutil setvcp 10 + 20 &;;
	5) xbacklight -dec 10 & ddcutil setvcp 10 - 20 &;;
	6) setsid -f "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

# Loop through all attached batteries and format the info
for battery in /sys/class/power_supply/BAT?*; do
	# If non-first battery, print a space separator.
	[ -n "${capacity+x}" ] && printf " "
	# Sets up the status and capacity
	capacity="$(cat "$battery/capacity" 2>&1)"
	case "$(cat "$battery/status" 2>&1)" in
		"Full") printf "󰂄" && exit ;;
		"Discharging") case 1 in
            $((capacity >= 90)) ) printf "󰂂 " ;;
            $((capacity >= 80)) ) printf "󰂁 " ;;
            $((capacity >= 70)) ) printf "󰂀 " ;;
            $((capacity >= 60)) ) printf "󰁿 " ;;
            $((capacity >= 50)) ) printf "󰁾 " ;;
            $((capacity >= 40)) ) printf "󰁽 " ;;
            $((capacity >= 30)) ) printf "󰁼 " ;;
            $((capacity >= 20)) ) printf "󰁻 " ;;
            $((capacity >= 10)) ) printf "󰁺 " ;;
        esac ;;
		"Charging") case 1 in
            $((capacity >= 90)) ) printf "󰂋 " ;;
            $((capacity >= 80)) ) printf "󰂊 " ;;
            $((capacity >= 70)) ) printf "󰢞 " ;;
            $((capacity >= 60)) ) printf "󰂉 " ;;
            $((capacity >= 50)) ) printf "󰢝 " ;;
            $((capacity >= 40)) ) printf "󰂈 " ;;
            $((capacity >= 30)) ) printf "󰂇 " ;;
            $((capacity >= 20)) ) printf "󰂆 " ;;
            $((capacity >= 10)) ) printf "󰢜 " ;;
        esac ;;
        "Not charging") if [[ $capacity -gt 92 ]] then
            printf "󰂄" && exit
        else
            printf "󰂃 "
        fi ;;
		"Unknown") printf "󱠴" ;;
		*) exit 1 ;;
	esac
    printf "$capacity%%"
done && printf "\\n"
